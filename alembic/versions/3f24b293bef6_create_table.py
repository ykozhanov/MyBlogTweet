"""Create table

Revision ID: 3f24b293bef6
Revises:
Create Date: 2024-09-07 13:10:12.924316

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3f24b293bef6"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('users_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("api_key", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        sa.UniqueConstraint("name", name="users_name_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_index("ix_users_api_key", "users", ["api_key"], unique=True)
    op.create_table(
        "likes",
        sa.Column("tweet_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["tweet_id"], ["tweets.id"], name="likes_tweet_id_fkey"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="likes_user_id_fkey"),
        sa.PrimaryKeyConstraint("tweet_id", "user_id", name="likes_pkey"),
    )
    op.create_table(
        "tweets",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "content", sa.VARCHAR(length=280), autoincrement=False, nullable=False
        ),
        sa.Column(
            "attachments",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="tweets_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="tweets_pkey"),
    )
    op.create_index("ix_tweets_user_id", "tweets", ["user_id"], unique=False)
    op.create_table(
        "followers",
        sa.Column("follower_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("followed_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["followed_id"], ["users.id"], name="followers_followed_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["follower_id"], ["users.id"], name="followers_follower_id_fkey"
        ),
        sa.PrimaryKeyConstraint("follower_id", "followed_id", name="followers_pkey"),
    )
    op.create_table(
        "medias",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("path_file", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="medias_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="medias_pkey"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("medias")
    op.drop_table("followers")
    op.drop_index("ix_tweets_user_id", table_name="tweets")
    op.drop_table("tweets")
    op.drop_table("likes")
    op.drop_index("ix_users_api_key", table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
