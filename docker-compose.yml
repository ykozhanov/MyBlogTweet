services:
  client:
    build:
      context: ./app/client
    ports:
      - "80:80"
    depends_on:
      - server
    volumes:
      - ./images/:/app/static/images
    networks:
      - my_network

  server:
    build:
      context: ./app/server
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./images/:/server/images
    networks:
      - my_network
    restart: always

  db:
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - ./db/:/var/lib/postgresql/data
    networks:
      - my_network
    restart: always

networks:
  my_network:
    driver: bridge
